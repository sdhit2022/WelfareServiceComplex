@page
@model ServiceComplex.Pages.Products.CategoryModel
@{
    ViewData["Title"] = "ایجاد محصول جدید";
}
@Html.AntiForgeryToken()
<style>
    .hiddenRow {
        padding: 0 !important;
    }
</style>


<!--  BEGIN CONTENT AREA  -->
<div id="content" class="main-content">
    <div class="layout-px-spacing">

        <div class="page-header">
            <div class="page-title">
                <h3>گروه کالا ها</h3>
            </div>
        </div>

        <div class="row layout-top-spacing" id="cancel-row">

            <div class="col-xl-12 col-lg-12 col-sm-12  layout-spacing">
                <div class="widget-content widget-content-area br-6">
                    <div class="text-center">
                        <button onclick="addModal()" class="btn btn-success ">افزودن گروه جدید</button>
                    </div>
                    <div class="table-responsive mb-4 mt-4">
                        <table id="dataTable" class="table table-hover table-bordered cell-border row-border" style="width:100%">
                            <thead>
                            <tr>
                                <th>نام</th>
                                <th>کد</th>
                                <th> وضعیت </th>
                                <th> گروه اصلی </th>
                                <th class="no-content"></th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var item in Model.List)
                            {
                                <tr>
                                    <td>@item.Name</td>
                                    <td>@item.Code</td>
                                    <td>
                                        @if (item.Status == false)
                                        {
                                            <span class="text text-danger">غیرفعال</span>
                                        }
                                        else
                                        {
                                            <span class="text text-success">فعال</span>
                                        }
                                    </td>
                                    <td>
                                        @item.Sub
                                    </td>


                                    <td>
                                        <button onclick="Edit('@item.Id','@item.Name','@item.Code','@item.CodeValue','@item.ParentId','@item.Status')" class="btn btn-warning btn-rounded btn-sm">ویرایش</button>
                                        <button onclick="Remove('@item.Id')" class="btn btn-danger btn-rounded btn-sm">حذف</button>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

        </div>

    </div>
</div>

<div class="modal fade" id="edit-category" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content" style="width:700px !Important">
            <div class="modal-header">
                <h5 class="modal-title text-center" id="exampleModalLabel1"> ویرایش گروه جدید</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x">
                        <line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line>
                    </svg>
                </button>
            </div>
            <form method="post" class="needs-validation" name="submitEditForm" id="submitEditForm">
                <div class="modal-body">

                    <div class="widget-content">

                        <div class="form-row">
                            <div class="col-md-6 mb-4">
                                <label for="">
                                    نام گروه
                                    <span class="text-danger">*</span>
                                </label>
                                <input type="text" class="form-control basic" asp-for="Command.Name" placeholder="نام گروه">
                                <span asp-validation-for="Command.Name" class="error"></span>
                            </div>

                            <div class="col-md-6 mb-4">

                                <label for="Group">کد گروه </label>
                                <input asp-for="Command.Code" oninput="getCode(this.value)" onkeypress="validate(event)" type="text" class="form-control basic" placeholder="کد گروه">
                                <span asp-validation-for="Command.Code" class="error"></span>

                            </div>


                        </div>

                        <div class="form-row">
                            <div class="col-md-6 mb-4">
                                <label for="Group">گروه اصلی </label>
                                <select type="text" onchange="changeGroup()" id="editParentId" asp-for="Command.ParentId" class="form-control pb-5" asp-items="@(new SelectList(Model.SelectList, "Id", "Name"))">
                                    <option value="0">-- گروه اصلی --</option>
                                </select>
                                <span asp-validation-for="Command.ParentId" class="error"></span>
                            </div>

                            <div class="col-md-6 mb-4">
                                <label for=""> وضعیت <span class="text-danger">*</span></label>
                                <select asp-for="Command.Status" type="text" class="form-control pb-5" id="" placeholder="وضعیت">
                                    <option value="true">فعال</option>
                                    <option value="false"> غیر فعال</option>
                                </select>
                                <span asp-validation-for="Command.Status" class="error"></span>
                            </div>
                        </div>
                        <input type="hidden" class="hidden" asp-for="Command.CodeValue"/>
                        <input type="hidden" class="hidden" asp-for="Command.Id"/>
                    </div>

                </div>
                <div class="modal-footer">
                    <button class="btn" data-dismiss="modal"><i class="flaticon-cancel-12"></i> انصراف</button>
                    <a id="editCategory" class="btn btn-primary">ذخیره</a>
                </div>
            </form>

        </div>
    </div>
</div>


<div class="modal fade" id="add-category" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content" style="width:700px !Important">
            <div class="modal-header">
                <h5 class="modal-title text-center" id="exampleModalLabel"> افزودن گروه جدید</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x">
                        <line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line>
                    </svg>
                </button>
            </div>
            <form method="post" class="needs-validation" name="submitForm" id="submitForm">
                <div class="modal-body">

                    <div class="widget-content">

                        <div class="form-row">
                            <div class="col-md-6 mb-4">
                                <label for="">
                                    نام گروه
                                    <span class="text-danger">*</span>
                                </label>
                                <input type="text" class="form-control basic" asp-for="Command.Name" placeholder="نام گروه">
                                <span asp-validation-for="Command.Name" class="error"></span>
                            </div>

                            <div class="col-md-6 mb-4">
                                <label for="code">
                                    کد گروه
                                    <span id="codeValue" class="pull-left"></span>
                                </label>
                                <input asp-for="Command.Code" oninput="getCode(this.value)" onkeypress="validate(event)" type="text" class="form-control basic" id="code" placeholder="کد گروه">
                                <span asp-validation-for="Command.Code" class="error"></span>
                                <span class="text text-info help-block" id="defualCode">آخرین کد ثبت شده برای این گروه : @Model.ProductLvlCode</span>
                            </div>


                        </div>

                        <div class="form-row">
                            <div class="col-md-6 mb-4">
                                <label for="Group">گروه اصلی </label>
                                <select type="text" onchange="changeGroup()" asp-for="Command.ParentId" class="form-control pb-5" id="Group" asp-items="@(new SelectList(Model.SelectList, "Id", "Name"))" placeholder="وضعیت" value="شاپ" required>
                                    <option value="0">-- گروه اصلی --</option>
                                </select>
                                <span asp-validation-for="Command.ParentId" class="error"></span>
                            </div>

                            <div class="col-md-6 mb-4">
                                <label for="validationCustom02"> وضعیت <span class="text-danger">*</span></label>
                                <select asp-for="Command.Status" type="text" class="form-control pb-5" id="validationCustom02" placeholder="وضعیت">
                                    <option value="true">فعال</option>
                                    <option value="false"> غیر فعال</option>
                                </select>
                                <span asp-validation-for="Command.Status" class="error"></span>
                            </div>
                        </div>
                        <input type="hidden" id="id" asp-for="Command.Id" value="@(Guid.NewGuid())"/>
                        <input type="hidden" class="hidden" asp-for="Command.CodeValue" id="setCode"/>
                    </div>

                </div>
                <div class="modal-footer">
                    <button class="btn" data-dismiss="modal"><i class="flaticon-cancel-12"></i> انصراف</button>
                    <button type="submit" id="submit" class="btn btn-primary">ذخیره</button>
                </div>
            </form>

        </div>
    </div>
</div>
<!--  END CONTENT AREA  -->

@section Scripts
{

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>


        function validate(evt) {
            var theEvent = evt || window.event;

            // Handle paste
            if (theEvent.type === 'paste') {
                key = event.clipboardData.getData('text/plain');
            } else {
                // Handle key press
                var key = theEvent.keyCode || theEvent.which;
                key = String.fromCharCode(key);
            }
            var regex = /[0-9]|\./;
            if (!regex.test(key)) {
                theEvent.returnValue = false;
                if (theEvent.preventDefault) theEvent.preventDefault();
            }
        }

      
        function addModal() {
            $("#add-category").modal("show");
        }


        $("#editCategory").on('click', function (evn) {
            evn.preventDefault();
           debugger
           

            var result = editCalculateCode();
            if (result === false)
                return false;

            var form = $("#submitEditForm");
            form.validate();
            if (form.valid() === false) {
                return false;
            }

            var result = calculateCode();
            if (result === false)
                return false;

            $.ajax({
                url: '@Url.Page(null, "Edit")',
                data: new FormData(document.forms.submitEditForm),
                contentType: false,
                processData: false,
                type: 'POST',
                headers: {
                    RequestVerificationToken:
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                },

                success: function (result) {
                    debugger
                    if (result.isSucceeded) {

                        notify("top center", "عملیات با موفقیت انجام شد", "success")
                        $("#add-category").modal("hide");
                        $(".modal-body").html("");
                        window.location.href = "/Products/Category";
                    } else {
                        notify("top center", result.message, "error")
                        return false;
                    }

                }
            })
       
       })
        function Edit(id, name, code, setCode, parentId, status) {
            debugger
            $("#edit-category").modal("show");
            $("#Command_Name").val(name);
            $("#Command_Code").val(code);
            $("#editParentId").val(parentId);
            $("#Command_CodeValue").val(setCode);
            $("#Command_Status").val(setCode);
            $("#Command_Id").val(id);
        }

        function getCode(value, type = false) {
            var code = "";

            if (!type) {
                code = changeGroup();
                if (code == false)
                    $("#codeValue").text(value)
                else {
                    {
                        $("#codeValue").text(code + value)

                        var str = (code + value).toString();
                        $("#setCode").val(str)
                        $("#Command_CodeValue").val(str)
                    };

                }
            } else
                $("#codeValue").text(value)

        }

        function getMaxCode(isMax = false) {

            var groupId = $("#Group").val();
            var codeMax = "";
            $.ajax({
                url: "/products/Category?proLvlId=" + groupId + "&noMax=" + isMax + "&handler=MaxCode",
                type: "GET",
                async: false,
                success: function (result) {
                    $("#defualCode").text("");
                    $("#defualCode").text("آخرین کد ثبت شده برای این گروه: " + result);
                    codeMax = result;
                }
            });
            return codeMax;
        }

        function editGetMaxCode(isMax = false, groupId) {

            var codeMax = "";
            $.ajax({
                url: "/products/Category?proLvlId=" + groupId + "&noMax=" + isMax + "&handler=MaxCode",
                type: "GET",
                async: false,
                success: function (result) {
                    $("#defualCode").text("");
                    $("#defualCode").text("آخرین کد ثبت شده برای این گروه: " + result);
                    codeMax = result;
                }
            });
            return codeMax;
        }

        function checkExistCode(code) {

            var id = $("#id").val();
            var group = $("#Group").val();
            if (group === "0")
                id = group;

            var existCode = "";
            $.ajax({
                url: "/products/Category?id=" + id + "&code=" + code + "&handler=CheckCode",
                type: "GET",
                async: false,
                success: function (result) {
                    existCode = result;
                }
            });
            return existCode;
        }

        function editExistCode(code, id) {
            var existCode = "";
            $.ajax({
                url: "/products/Category?id=" + id + "&code=" + code + "&handler=EditExistCode",
                type: "GET",
                async: false,
                success: function (result) {
                    existCode = result;
                }
            });
            return existCode;
        }


        function changeGroup() {
            var code = "";
            var groupId = $("#Group").val();
            var codeVal = $("#code").val();
            if (groupId == 0) {
                getCode(code + codeVal, true)
                return false
            };

            $.ajax({
                url: "/products/Category?proLvlId=" + groupId + "&handler=Code",
                type: "GET",
                async: false,
                success: function (result) {
                    code = result;
                }
            });
            getMaxCode()
            getCode(code + codeVal, true)
            return code;
        }



        function calculateCode() {

            var result = true;

            var group = $("#Group").val();
            var code = $("#code").val();
            var codeS = $("#code").val();


            // check Exist code
            if (codeS === "" || codeS === undefined) {
                code = getMaxCode();

                if (code == null) code = "1";
                var existCode = checkExistCode(code);

                if (existCode) {

                    var rplcCode = "";
                    var checkFor = true;
                    for (var i = 0, count = 1; checkFor === true; i++) {

                        const rplcCode = code.at(-1);
                        var parse = parseInt(rplcCode);
                        var th = parse + 1;
                        var resultCode = code.replace(/.$/, th);
                        code = resultCode;
                        checkFor = checkExistCode(resultCode);
                    }
                }
            };


            // generate autho code
            if (group === "0") {
                if (code.length > @Model.MainCodeCount ) {
                    notify("top center", "کد کالا باید @Model.MainCodeCount رقمی باشد", "error");
                    result = false;
                    return false;
                }

                if (code.length !== @Model.MainCodeCount ) {

                    var setCode = code;
                    for (var i = 0, count = 1; i < @Model.MainCodeCount-code.length; i++) {
                        setCode = "0" + setCode;

                    }
                    code = setCode;

                }

            }
            else {
                if (code.length > @Model.SubCodeCount ) {
                    notify("top center", "کد کالا باید @Model.SubCodeCount رقمی باشد", "error");
                    result = false;
                    return false;
                }


                if (code.length !== @Model.SubCodeCount ) {
                    var setCode = code;
                    for (var i = 0, count = 1; i < @Model.SubCodeCount-code.length; i++) {
                        setCode = "0" + setCode;
                    }
                    code = setCode;
                }
            }

            // helper
            $("#code").val("");
            $("#code").val(code);
            code = $("#code").val();

            debugger
            $("#setCode").val("").toString();

            var isMax = false;
            if (group === "0")
                isMax = true;

            var m = getMaxCode(isMax);
            if (m === null)
                m = "";
            getCode(m + code);
            $("#setCode").val(m + code).toString();
        }

        function editCalculateCode() {

            var result = true;

            var group = $("#editParentId").val();
            if(group==null) group="0";
            var code = $("#Command_Code").val();
            var codeS = $("#Command_Code").val();

        debugger
            // check Exist code
            if (codeS === "" || codeS === undefined) {
                code = editGetMaxCode(group);

                if (code == null) code = "1";
                var existCode = editExistCode(code, id);

                if (existCode) {

                    var rplcCode = "";
                    var checkFor = true;
                    for (var i = 0, count = 1; checkFor === true; i++) {

                        const rplcCode = code.at(-1);
                        var parse = parseInt(rplcCode);
                        var th = parse + 1;
                        var resultCode = code.replace(/.$/, th);
                        code = resultCode;
                        checkFor = editExistCode(resultCode);
                    }
                }
            };


            // generate autho code
            if (group === "0") {
                if (code.length > @Model.MainCodeCount ) {
                    notify("top center", "کد کالا باید @Model.MainCodeCount رقمی باشد", "error");
                    result = false;
                    return false;
                }

                if (code.length !== @Model.MainCodeCount ) {

                    var setCode = code;
                    for (var i = 0, count = 1; i < @Model.MainCodeCount-code.length; i++) {
                        setCode = "0" + setCode;

                    }
                    code = setCode;

                }

            }
            else {
                if (code.length > @Model.SubCodeCount ) {
                    notify("top center", "کد کالا باید @Model.SubCodeCount رقمی باشد", "error");
                    result = false;
                    return false;
                }


                if (code.length !== @Model.SubCodeCount ) {
                    var setCode = code;
                    for (var i = 0, count = 1; i < @Model.SubCodeCount-code.length; i++) {
                        setCode = "0" + setCode;
                    }
                    code = setCode;
                }
            }

            // helper
            $("#Command_Code").val("");
            $("#Command_Code").val(code);
            code = $("#Command_Code").val();

          
            var setCode = $("#Command_CodeValue").val();
       

            var isMax = false;
            if (group === "0")
                isMax = true;

            var m = editGetMaxCode(isMax,group);
            if (m === null)
                m = "";
            getCode(m + code);
            debugger
            $("#Command_CodeValue").val(m + code).toString();
        }

        $("#submitForm").on("submit", function (evn) {
            evn.preventDefault();

            var form = $("#submitForm");
            form.validate();
            if (form.valid() === false) {
                return false;
            }

            var result = calculateCode();
            if (result === false)
                return false;

            $.ajax({
                url: '',
                data: new FormData(document.forms.submitForm),
                contentType: false,
                processData: false,
                type: 'POST',
                headers: {
                    RequestVerificationToken:
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                },

                success: function (result) {
                    debugger
                    if (result.isSucceeded) {

                        notify("top center", "عملیات با موفقیت انجام شد", "success")
                        $("#add-category").modal("hide");
                        $(".modal-body").html("");
                        window.location.href = "/Products/Category";
                    } else {
                        notify("top center", result.message, "error")
                        return false;
                    }

                }
            })

        })

        function Remove(id) {
            debugger
            $.ajax({
                url: '?handler=remove&id=' + id,
                type: 'Get',
                success: function (result) {
                    debugger
                    if (result.isSucceeded) {
                        notify("top center", "عملیات با موفقیت انجام شد", "success")
                        window.location.href = "/Products/Category";
                    }
                    else {
                        notify("top center", result.message, "error")
                        return false;
                    }

                }
            })

        };

    </script>
}