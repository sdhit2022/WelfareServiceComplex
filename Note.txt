   public override int SaveChanges()
    {
        var modifiedEntries = ChangeTracker.Entries().Where(x => x.State == EntityState.Modified || x.State == EntityState.Deleted || x.State == EntityState.Added);
        foreach (var entry in modifiedEntries)
        {
            var baseConfig = _httpContext.HttpContext.Session.GetJson<BaseConfigDto>("BaseConfig");

            var getEntityType = entry.Context.Model.FindEntityType(entry.Entity.GetType());
            if (getEntityType != null)
            {
                //shodow property
                var insert = getEntityType.FindProperty("SysUsrCreatedon");
                var insertBy = getEntityType.FindProperty("SysUsrCreatedby");
                var updateBy = getEntityType.FindProperty("SysUsrModifiedby");
                var updateDate = getEntityType.FindProperty("SysUsrModifiedon");
                var busUnitUid = getEntityType.FindProperty("BusUnitUid");
                var fisPeriodUid = getEntityType.FindProperty("FisPeriodUid");
                

                if (entry.State == EntityState.Added && busUnitUid != null) entry.Property("BusUnitUid").CurrentValue = baseConfig.BusUnitUId;
                if (entry.State == EntityState.Added && fisPeriodUid != null) entry.Property("FisPeriodUid").CurrentValue = baseConfig.FisPeriodUId;//TODO current user
                
                if (entry.State == EntityState.Added && insert != null) entry.Property("SysUsrCreatedon").CurrentValue = DateTime.Now;
                if (entry.State == EntityState.Added && insertBy != null) entry.Property("SysUsrCreatedby").CurrentValue = new Guid();//TODO current user

                if (entry.State == EntityState.Modified && updateBy != null) entry.Property("SysUsrModifiedon").CurrentValue = DateTime.Now;
                if (entry.State == EntityState.Modified && updateDate != null)
                    entry.Property("SysUsrModifiedby").CurrentValue = entry.Property("SysUsrCreatedby").CurrentValue = new Guid();//TODO current user
            }
        }
        return base.SaveChanges();
    }
